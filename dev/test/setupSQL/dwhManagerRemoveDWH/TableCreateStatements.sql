CREATE TABLE GroupTypes (
	GROUPTYPE varchar(64) not null,
	VERSIONID varchar(128) not null,
	DATANAME varchar(128) not null,
	DATATYPE varchar(50) not null,
	DATASIZE int not null,
	DATASCALE int not null,
	NULLABLE smallint not null
);
CREATE TABLE CountingManagement (
	STORAGEID varchar(255) not null,
	TABLENAME varchar(255) not null,
	LASTAGGREGATEDROW bigint not null
);
CREATE TABLE ExternalStatement (
	VERSIONID varchar(128) not null,
	STATEMENTNAME varchar(255) not null,
	EXECUTIONORDER numeric(9, 0) not null,
	DBCONNECTION varchar(20) not null,
	STATEMENT varchar(32000) null,
	BASEDEF int not null
);
CREATE TABLE DWHCOLUMN (STORAGEID VARCHAR(255), DATANAME VARCHAR(128), COLNUMBER NUMERIC(9), DATATYPE VARCHAR(50), DATASIZE INT, DATASCALE INT, UNIQUEVALUE NUMERIC(9), NULLABLE INT, INDEXES VARCHAR(20), UNIQUEKEY INT, STATUS VARCHAR(10), INCLUDESQL INT);
CREATE TABLE BUSYHOUR (VERSIONID VARCHAR(128), BHLEVEL VARCHAR(32), BHTYPE VARCHAR(32), BHCRITERIA VARCHAR(32000), WHERECLAUSE VARCHAR(32000), DESCRIPTION VARCHAR(32000), TARGETVERSIONID VARCHAR(128), BHOBJECT VARCHAR(32), BHELEMENT INT, ENABLE INT, AGGREGATIONTYPE VARCHAR(128), OFFSET INT, WINDOWSIZE INT, LOOKBACK INT, P_THRESHOLD INT, N_THRESHOLD INT, CLAUSE VARCHAR(32000), PLACEHOLDERTYPE VARCHAR(128), GROUPING VARCHAR(32), REACTIVATEVIEWS INT);
CREATE TABLE EXTERNALSTATEMENTSTATUS (TECHPACK_NAME VARCHAR(30), STATEMENTNAME VARCHAR(255), VERSIONID VARCHAR(128), STATUS VARCHAR(10), EXECTIME DATETIME, EXECSTATEMENT VARCHAR(32000));
CREATE TABLE VERSIONING (VERSIONID VARCHAR(128), DESCRIPTION VARCHAR(50), STATUS NUMERIC(9), TECHPACK_NAME VARCHAR(30), TECHPACK_VERSION VARCHAR(32), TECHPACK_TYPE VARCHAR(10), PRODUCT_NUMBER VARCHAR(255), LOCKEDBY VARCHAR(255), LOCKDATE DATETIME, BASEDEFINITION VARCHAR(128), BASEVERSION VARCHAR(16), INSTALLDESCRIPTION VARCHAR(32000), UNIVERSENAME VARCHAR(30), UNIVERSEEXTENSION VARCHAR(16), ENIQ_LEVEL VARCHAR(12), LICENSENAME VARCHAR(255));
CREATE TABLE AGGREGATION(AGGREGATION VARCHAR(255), VERSIONID VARCHAR(128), AGGREGATIONSET VARCHAR(100), AGGREGATIONGROUP VARCHAR(100), REAGGREGATIONSET VARCHAR(100), REAGGREGATIONGROUP VARCHAR(100), GROUPORDER INT, AGGREGATIONORDER INT, AGGREGATIONTYPE  VARCHAR(50), AGGREGATIONSCOPE  VARCHAR(50));
CREATE TABLE AGGREGATIONRULE(AGGREGATION VARCHAR(255), VERSIONID VARCHAR(128), RULEID INT, TARGET_TYPE VARCHAR(50), TARGET_LEVEL VARCHAR(50), TARGET_TABLE VARCHAR(255), TARGET_MTABLEID VARCHAR(255), SOURCE_TYPE VARCHAR(50), SOURCE_LEVEL VARCHAR(50), SOURCE_TABLE VARCHAR(255), SOURCE_MTABLEID VARCHAR(255), RULETYPE VARCHAR(50), AGGREGATIONSCOPE VARCHAR(50), BHTYPE VARCHAR(50), ENABLE INT);
CREATE TABLE META_COLLECTION_SETS (COLLECTION_SET_ID NUMERIC(38), COLLECTION_SET_NAME VARCHAR(128), DESCRIPTION VARCHAR(32000), VERSION_NUMBER VARCHAR(32), ENABLED_FLAG VARCHAR(1), TYPE VARCHAR(32));
CREATE TABLE DWHTECHPACKS (TECHPACK_NAME VARCHAR(30), VERSIONID VARCHAR(128), CREATIONDATE DATETIME);
CREATE TABLE BUSYHOURSOURCE (VERSIONID VARCHAR(128), BHLEVEL VARCHAR(32), BHTYPE VARCHAR(32), TYPENAME VARCHAR(255), TARGETVERSIONID VARCHAR(128), BHOBJECT VARCHAR(32));
CREATE TABLE BUSYHOURRANKKEYS (VERSIONID VARCHAR(128), BHLEVEL VARCHAR(32), BHTYPE VARCHAR(32), KEYNAME VARCHAR(128), KEYVALUE VARCHAR(128), ORDERNBR NUMERIC(9), TARGETVERSIONID VARCHAR(128), BHOBJECT VARCHAR(32));
CREATE TABLE TPACTIVATION (TECHPACK_NAME VARCHAR(30), STATUS VARCHAR(10), VERSIONID VARCHAR(128), TYPE VARCHAR(10), MODIFIED INT);
CREATE TABLE MEASUREMENTOBJBHSUPPORT (TYPEID VARCHAR(255), OBJBHSUPPORT VARCHAR(32));
CREATE TABLE MEASUREMENTCOUNTER (TYPEID VARCHAR(255), DATANAME VARCHAR(128), DESCRIPTION VARCHAR(32000), TIMEAGGREGATION VARCHAR(50), GROUPAGGREGATION VARCHAR(50), COUNTAGGREGATION VARCHAR(50), COLNUMBER DECIMAL(9), DATATYPE VARCHAR(50), DATASIZE INTEGER, DATASCALE INTEGER, INCLUDESQL INTEGER, UNIVOBJECT VARCHAR(128), UNIVCLASS VARCHAR(35), COUNTERTYPE VARCHAR(16), COUNTERPROCESS VARCHAR(16), DATAID VARCHAR(255), FOLLOWJOHN integer);
CREATE TABLE MEASUREMENTKEY (TYPEID VARCHAR(255), DATANAME VARCHAR(128), DESCRIPTION VARCHAR(32000), ISELEMENT INTEGER, UNIQUEKEY INTEGER, COLNUMBER DECIMAL(9), DATATYPE VARCHAR(50), DATASIZE INTEGER, DATASCALE INTEGER, UNIQUEVALUE DECIMAL(9), NULLABLE INTEGER, INDEXES VARCHAR(20), INCLUDESQL INTEGER, UNIVOBJECT VARCHAR(128), JOINABLE INTEGER, DATAID VARCHAR(255),ROPGRPCELL INT);
CREATE TABLE META_COLLECTIONS (COLLECTION_ID NUMERIC(38), COLLECTION_NAME VARCHAR(128), COLLECTION VARCHAR(200), MAIL_ERROR_ADDR VARCHAR(100), MAIL_FAIL_ADDR VARCHAR(100), MAIL_BUG_ADDR VARCHAR(100), MAX_ERRORS NUMERIC(38), MAX_FK_ERRORS NUMERIC(38), MAX_COL_LIMIT_ERRORS NUMERIC(38), CHECK_FK_ERROR_FLAG VARCHAR(1), CHECK_COL_LIMITS_FLAG VARCHAR(1), LAST_TRANSFER_DATE DATETIME, VERSION_NUMBER VARCHAR(32), COLLECTION_SET_ID NUMERIC(38), USE_BATCH_ID VARCHAR(1), PRIORITY NUMERIC(3), QUEUE_TIME_LIMIT NUMERIC(38), ENABLED_FLAG VARCHAR(1), SETTYPE VARCHAR(10), FOLDABLE_FLAG VARCHAR(1), MEASTYPE VARCHAR(30), HOLD_FLAG VARCHAR(1), SCHEDULING_INFO VARCHAR(2000));
CREATE TABLE MEASUREMENTTYPE (TYPEID VARCHAR(255), TYPECLASSID VARCHAR(50), TYPENAME VARCHAR(255), VENDORID VARCHAR(50), FOLDERNAME VARCHAR(50), DESCRIPTION VARCHAR(32000), STATUS NUMERIC(9), VERSIONID VARCHAR(128), OBJECTID VARCHAR(255), OBJECTNAME VARCHAR(255), OBJECTVERSION INT, OBJECTTYPE VARCHAR(255), JOINABLE VARCHAR(255), SIZING VARCHAR(16), TOTALAGG INT, ELEMENTBHSUPPORT INT, RANKINGTABLE INT, DELTACALCSUPPORT INT, PLAINTABLE INT, UNIVERSEEXTENSION VARCHAR(12), VECTORSUPPORT INT, DATAFORMATSUPPORT INT, FOLLOWJOHN INT, ONEMINAGG INT, FIFTEENMINAGG INT, EVENTSCALCTABLE INT, MIXEDPARTITIONSTABLE INT, LOADFILE_DUP_CHECK INT, SONAGG int, SONFIFTEENMINAGG int, ROPGRPCELL varchar(255));
CREATE TABLE MeasurementVector (TYPEID varchar(255), DATANAME varchar(128), VENDORRELEASE varchar(16), VINDEX numeric(32), VFROM varchar(255), VTO varchar(255), MEASURE varchar(255), QUANTITY numeric(32));
CREATE TABLE TYPEACTIVATION (TECHPACK_NAME VARCHAR(30), STATUS VARCHAR(10), TYPENAME VARCHAR(255), TABLELEVEL VARCHAR(50), STORAGETIME NUMERIC(9), TYPE VARCHAR(12), PARTITIONPLAN VARCHAR(128));
CREATE TABLE DIM_E_RBS_CARRIER_V_pmAverageRssi (pmAverageRssi_DCVECTOR int, pmAverageRssi_VALUE varchar(50), DC_RELEASE varchar(16));
CREATE TABLE DIM_E_RAN_UCELL_V_PMRES_pmRes1 (pmRes1_DCVECTOR int, pmRes1_VALUE varchar(50), DC_RELEASE varchar(16), QUANTITY int);
CREATE TABLE DWHTYPE (TECHPACK_NAME VARCHAR(30), TYPENAME VARCHAR(255), TABLELEVEL VARCHAR(50), STORAGEID VARCHAR(255), PARTITIONSIZE NUMERIC(9), PARTITIONCOUNT NUMERIC(9), STATUS VARCHAR(50), TYPE VARCHAR(50), OWNER VARCHAR(50), VIEWTEMPLATE VARCHAR(255), CREATETEMPLATE VARCHAR(255), NEXTPARTITIONTIME DATETIME, BASETABLENAME VARCHAR(125), DATADATECOLUMN VARCHAR(128), PUBLICVIEWTEMPLATE VARCHAR(255), PARTITIONPLAN VARCHAR(128));
CREATE TABLE DWHPARTITION (STORAGEID VARCHAR(255), TABLENAME VARCHAR(255), STARTTIME DATETIME, ENDTIME DATETIME, STATUS VARCHAR(10), LOADORDER INTEGER);
CREATE TABLE LOG_BusyhourHistory (ID SMALLINT, DATETIME DATETIME, SQL VARCHAR(32000));
CREATE TABLE DC_E_MGW_ATMPORT_RAW_01 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORTBH_RANKBH_01 (OSS_ID VARCHAR(50), MGW VARCHAR(64), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), DATE_ID DATE, BHTYPE VARCHAR(50), BHVALUE NUMERIC(18), BHCLASS TINYINT, WEEKBH TINYINT, MONTHBH TINYINT, BUSYHOUR TINYINT, DATACOVERAGE SMALLINT, PERIOD_DURATION SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT);
CREATE TABLE DC_E_MGW_ATMPORTBH_RANKBH_02 (OSS_ID VARCHAR(50), MGW VARCHAR(64), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), DATE_ID DATE, BHTYPE VARCHAR(50), BHVALUE NUMERIC(18), BHCLASS TINYINT, WEEKBH TINYINT, MONTHBH TINYINT, BUSYHOUR TINYINT, DATACOVERAGE SMALLINT, PERIOD_DURATION SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT);
CREATE TABLE DC_E_MGW_ATMPORTBH_RANKBH_03 (OSS_ID VARCHAR(50), MGW VARCHAR(64), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), DATE_ID DATE, BHTYPE VARCHAR(50), BHVALUE NUMERIC(18), BHCLASS TINYINT, WEEKBH TINYINT, MONTHBH TINYINT, BUSYHOUR TINYINT, DATACOVERAGE SMALLINT, PERIOD_DURATION SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT);
CREATE TABLE DC_E_MGW_ATMPORTBH_RANKBH_04 (OSS_ID VARCHAR(50), MGW VARCHAR(64), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), DATE_ID DATE, BHTYPE VARCHAR(50), BHVALUE NUMERIC(18), BHCLASS TINYINT, WEEKBH TINYINT, MONTHBH TINYINT, BUSYHOUR TINYINT, DATACOVERAGE SMALLINT, PERIOD_DURATION SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT);
CREATE TABLE DC_E_MGW_ATMPORTBH_RANKBH_05 (OSS_ID VARCHAR(50), MGW VARCHAR(64), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), DATE_ID DATE, BHTYPE VARCHAR(50), BHVALUE NUMERIC(18), BHCLASS TINYINT, WEEKBH TINYINT, MONTHBH TINYINT, BUSYHOUR TINYINT, DATACOVERAGE SMALLINT, PERIOD_DURATION SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT);
CREATE TABLE DC_E_MGW_ATMPORTBH_RANKBH_06 (OSS_ID VARCHAR(50), MGW VARCHAR(64), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), DATE_ID DATE, BHTYPE VARCHAR(50), BHVALUE NUMERIC(18), BHCLASS TINYINT, WEEKBH TINYINT, MONTHBH TINYINT, BUSYHOUR TINYINT, DATACOVERAGE SMALLINT, PERIOD_DURATION SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT);
CREATE TABLE DC_E_MGW_ATMPORT_DAYBH_CALC (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, MIN_ID TINYINT, BHTYPE VARCHAR(50), BUSYHOUR TINYINT, BHCLASS SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAY_01 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, WEEK_ID TINYINT, DATACOVERAGE SMALLINT, AGG_COUNT SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAY_02 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, WEEK_ID TINYINT, DATACOVERAGE SMALLINT, AGG_COUNT SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAY_03 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, WEEK_ID TINYINT, DATACOVERAGE SMALLINT, AGG_COUNT SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAY_04 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, WEEK_ID TINYINT, DATACOVERAGE SMALLINT, AGG_COUNT SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAY_05 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, WEEK_ID TINYINT, DATACOVERAGE SMALLINT, AGG_COUNT SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAY_06 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, WEEK_ID TINYINT, DATACOVERAGE SMALLINT, AGG_COUNT SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAYBH_01 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, MIN_ID TINYINT, BHTYPE VARCHAR(50), BUSYHOUR TINYINT, BHCLASS SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAYBH_02 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, MIN_ID TINYINT, BHTYPE VARCHAR(50), BUSYHOUR TINYINT, BHCLASS SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAYBH_03 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, MIN_ID TINYINT, BHTYPE VARCHAR(50), BUSYHOUR TINYINT, BHCLASS SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAYBH_04 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, MIN_ID TINYINT, BHTYPE VARCHAR(50), BUSYHOUR TINYINT, BHCLASS SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAYBH_05 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, MIN_ID TINYINT, BHTYPE VARCHAR(50), BUSYHOUR TINYINT, BHCLASS SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_DAYBH_06 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, MIN_ID TINYINT, BHTYPE VARCHAR(50), BUSYHOUR TINYINT, BHCLASS SMALLINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_RAW_02 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_RAW_03 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_RAW_04 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_RAW_05 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_RAW_06 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_COUNT_01 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_COUNT_02 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_COUNT_03 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_COUNT_04 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_COUNT_05 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE DC_E_MGW_ATMPORT_COUNT_06 (OSS_ID VARCHAR(50), SN VARCHAR(255), NEUN VARCHAR(64), NEDN VARCHAR(255), NESW VARCHAR(35), MGW VARCHAR(64), MOID VARCHAR(255), TRANSPORTNETWORK VARCHAR(35), ATMPORT VARCHAR(35), USERLABEL VARCHAR(128), DATE_ID DATE, YEAR_ID SMALLINT, MONTH_ID TINYINT, DAY_ID TINYINT, HOUR_ID TINYINT, DATETIME_ID DATETIME, MIN_ID TINYINT, TIMELEVEL VARCHAR(10), SESSION_ID SMALLINT, BATCH_ID SMALLINT, PERIOD_DURATION SMALLINT, ROWSTATUS VARCHAR(16), DC_RELEASE VARCHAR(16), DC_SOURCE VARCHAR(16), DC_TIMEZONE VARCHAR(16), DC_SUSPECTFLAG INT, UTC_DATETIME_ID DATETIME, PMTRANSMITTEDATMCELLS NUMERIC(18), PMRECEIVEDATMCELLS NUMERIC(18), PMSECONDSWITHUNEXP NUMERIC(18));
CREATE TABLE META_DATABASES (USERNAME varchar(30), VERSION_NUMBER varchar(32), TYPE_NAME varchar(15), CONNECTION_ID numeric(32), CONNECTION_NAME varchar(30), CONNECTION_STRING varchar(200), PASSWORD varchar(30), DESCRIPTION varchar (32000), DRIVER_NAME varchar (100), DB_LINK_NAME varchar(128));
CREATE TABLE REFERENCETABLE (TYPEID VARCHAR(255), VERSIONID VARCHAR(128), TYPENAME VARCHAR(255), OBJECTID VARCHAR(255), OBJECTNAME VARCHAR(255), OBJECTVERSION VARCHAR(50), OBJECTTYPE VARCHAR(255), DESCRIPTION VARCHAR(32000), STATUS NUMERIC(9), UPDATE_POLICY NUMERIC (9), TABLE_TYPE VARCHAR(12), DATAFORMATSUPPORT INT, BASEDEF INT);
CREATE TABLE MEASUREMENTTABLE (MTABLEID VARCHAR(255), TABLELEVEL VARCHAR(50), TYPEID VARCHAR(255), BASETABLENAME VARCHAR(255), DEFAULT_TEMPLATE VARCHAR(50), PARTITIONPLAN VARCHAR(128));


CREATE TABLE sys.SYSTABLE (table_name varchar(128), table_id INT, table_type varchar(10), creator varchar(10));
CREATE TABLE sys.SYSUSERPERM (user_name varchar(30), user_id varchar(10));
CREATE TABLE sys.SYSCOLUMNS (creator varchar(128),  cname varchar(128),  tname varchar(128), coltype varchar(128), nulls varchar(1), length INTEGER, syslength SMALLINT, in_primary_key varchar(128),  colno INTEGER, default_value varchar(256), column_kind varchar(1), remarks VARCHAR(256));

CREATE TABLE Partitionplan (PARTITIONPLAN varchar(128), DEFAULTSTORAGETIME numeric(20), DEFAULTPARTITIONSIZE numeric(20), MAXSTORAGETIME numeric(20) , PARTITIONTYPE TINYINT);
-------
-- Start: EANGUAN, 20110404, Adding the below tables just for DROP table testing purpose, so their structure does not matter
-- Note: Dont use these tables for other tests as they will be dropped in test case: DWHTableCheckActionTest.testDropViewFunctionality()
-------
CREATE TABLE dc.SYSFOREIGNKEY (user_name varchar(30), user_id INT);
CREATE TABLE dc.SYSTABLE (user_name varchar(30), user_id INT);
CREATE TABLE dc.SYSFILE (user_name varchar(30), user_id INT);
CREATE TABLE dc.SYSINDEX (user_name varchar(30), user_id INT);
CREATE TABLE dc.SYSCOLUMN (user_name varchar(30), user_id INT);
CREATE TABLE dc.SYSUSERPERM (user_name varchar(30), user_id INT);
--------
-- End
--------